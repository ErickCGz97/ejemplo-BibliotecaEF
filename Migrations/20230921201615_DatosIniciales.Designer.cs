// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bibliotecaEF;

#nullable disable

namespace bibliotecaEF.Migrations
{
    [DbContext(typeof(LibrosContext))]
    [Migration("20230921201615_DatosIniciales")]
    partial class DatosIniciales
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("bibliotecaEF.Models.Autor", b =>
                {
                    b.Property<Guid>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AutorGenero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutorNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AutorPais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutorId");

                    b.ToTable("Autor", (string)null);

                    b.HasData(
                        new
                        {
                            AutorId = new Guid("7b86cea0-42c1-4b24-a9f2-b14ab4ff6e46"),
                            AutorGenero = "Masculino",
                            AutorNombre = "George RR Martin",
                            AutorPais = "Estados Unidos"
                        },
                        new
                        {
                            AutorId = new Guid("7b86cea0-42c1-4b24-a9f2-b14ab4ff6e50"),
                            AutorGenero = "Masculino",
                            AutorNombre = "JRR Tolkien",
                            AutorPais = "Inglaterra"
                        },
                        new
                        {
                            AutorId = new Guid("7b86cea0-42c1-4b24-a9f2-b14ab4ff6e54"),
                            AutorGenero = "Masculino",
                            AutorNombre = "David Gill",
                            AutorPais = "España"
                        });
                });

            modelBuilder.Entity("bibliotecaEF.Models.Libro", b =>
                {
                    b.Property<Guid>("LibroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneroLibro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibroDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibroNombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UbicacionLibroEstante")
                        .HasColumnType("int");

                    b.HasKey("LibroId");

                    b.HasIndex("AutorId");

                    b.ToTable("Libro", (string)null);

                    b.HasData(
                        new
                        {
                            LibroId = new Guid("65344f60-bcf3-49a0-be7c-354155c12333"),
                            AutorId = new Guid("7b86cea0-42c1-4b24-a9f2-b14ab4ff6e46"),
                            FechaRegistro = new DateTime(2023, 9, 21, 14, 16, 15, 379, DateTimeKind.Local).AddTicks(1479),
                            GeneroLibro = "Novela - Literatura fantastica",
                            LibroDescripcion = "Historia epica de Fantasia Medieval",
                            LibroNombre = "Juego de Tronos",
                            UbicacionLibroEstante = 1
                        },
                        new
                        {
                            LibroId = new Guid("65344f60-bcf3-49a0-be7c-354155c12336"),
                            AutorId = new Guid("7b86cea0-42c1-4b24-a9f2-b14ab4ff6e46"),
                            FechaRegistro = new DateTime(2023, 9, 21, 14, 16, 15, 379, DateTimeKind.Local).AddTicks(1501),
                            GeneroLibro = "Novela - Literatura fantastica",
                            LibroDescripcion = "Historia epica de Fantasia Medieval",
                            LibroNombre = "Choque de Reyes",
                            UbicacionLibroEstante = 2
                        },
                        new
                        {
                            LibroId = new Guid("65344f60-bcf3-49a0-be7c-354155c12339"),
                            AutorId = new Guid("7b86cea0-42c1-4b24-a9f2-b14ab4ff6e50"),
                            FechaRegistro = new DateTime(2023, 9, 21, 14, 16, 15, 379, DateTimeKind.Local).AddTicks(1507),
                            GeneroLibro = "Novela - Fantasia Heroica",
                            LibroDescripcion = "Historia de fantasia heroica",
                            LibroNombre = "El señor de los anillos - Las Dos Torres",
                            UbicacionLibroEstante = 0
                        },
                        new
                        {
                            LibroId = new Guid("65344f60-bcf3-49a0-be7c-354155c12342"),
                            AutorId = new Guid("7b86cea0-42c1-4b24-a9f2-b14ab4ff6e54"),
                            FechaRegistro = new DateTime(2023, 9, 21, 14, 16, 15, 379, DateTimeKind.Local).AddTicks(1513),
                            GeneroLibro = "Novela - Historia epica",
                            LibroDescripcion = "Historia epica samurai",
                            LibroNombre = "El guerrero a la sombra del cerezo",
                            UbicacionLibroEstante = 0
                        });
                });

            modelBuilder.Entity("bibliotecaEF.Models.Libro", b =>
                {
                    b.HasOne("bibliotecaEF.Models.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("bibliotecaEF.Models.Autor", b =>
                {
                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
